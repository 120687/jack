{ "name": "Jack",
  "scopeName": "source.jack",
  "fileTypes": ["jk"],
  "patterns": [
    { "name": "comment.line.jack",
      "match": "(--).*$\\n?"
    },
    { "name": "punctuation.terminator.statement",
      "match": ";"
    },
    { "name": "keyword.control",
      "match": "(return|if|elif|else|while|for|in)\\b"
    },
    { "name": "keyword.language",
      "match": "(vars|delete|is)\\b"
    },
    { "name": "constant.language",
      "match": "(true|false|null)\\b"
    },
    { "name": "constant.numeric",
      "match": "(-?([1-9][0-9]*|0x[0-9a-fA-F]+)|0)"
    },
    { "name": "support.function",
      "match": "(print|rand|range|inspect|bind|i-keys|i-values|i-pairs|i-map|i-filter|i-chunk|i-collect|i-zip|i-merge|i-each)\\b"
    },
    { "name": "support.function",
      "match": "(i-any[?]|i-all[?])"
    },
    { "name": "support.function.constructor",
      "match": "(Integer|Boolean|Null|String|Buffer|List|Object|Function)\\b"
    },
    {
      "match": "{([a-zA-Z0-9_, ]*)\\|",
      "captures": {
        "1": {"name": "variable.parameter"}
      }
    },
    { "name": "support.type",
      "match": "@[a-zA-Z]+"
    },
    { "name": "entity.name.tag",
      "match": "[a-zA-Z_]([-]?[a-zA-Z0-9_])*[?!]?:"
    },
    { "name": "variable.other",
      "match": "[a-zA-Z_]([-]?[a-zA-Z0-9_])*[?!]?"
    },
    { "name": "string.quoted.single",
      "begin": "'",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin"
        }
      },
      "end": "'",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end"
        }
      },
      "patterns": [
        {
          "match": "\\\\.",
          "name": "constant.character.escape"
        }
      ]
    },
    { "name": "string.binary",
      "match": "<[0-9A-Fa-f][0-9A-Fa-f](\\s+[0-9A-Fa-f][0-9A-Fa-f])*>"
    },

    { "name": "string.quoted.double",
      "begin": "\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin"
        }
      },
      "end": "\"",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end"
        }
      },
      "patterns": [
        {
          "match": "\\\\.",
          "name": "constant.character.escape"
        }
      ]
    },
    {
      "name": "keyword.assignment",
      "match": "="
    },
    {
      "name": "keyword.address",
      "match": "\\.&"
    },
    {
      "name": "keyword.length",
      "match": "#"
    },
    {
      "name": "meta.brace.curly",
      "match": "\\{|\\}"
    },
    {
      "name": "meta.brace.round",
      "match": "\\(|\\)"
    },
    {
      "name": "support.constant.list",
      "match": "\\[|\\]"
    },
    {
      "name": "keyword.operator",
      "match": "\\+|-|\\*|\\/|%|^|<|>|!=|==|<=|>=|~|&&|\\|\\||\\^\\^|\\?|:"
    }
 ],
  "uuid": "79497c46-d13d-4b50-8389-c4c8cac6f3a5"
}
