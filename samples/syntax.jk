-- integer literals
0
-1
23
10

-- boolean literals
true; false

-- null literal
null

-- String literal
"Hello World"
'With single quotes'
"and \" escapes"

-- Buffer literal
<4A 61 63 6B 2A 00>

-- array literal
[[0, 1, 0, 1],
 [1, 0, 0, 1],
 [0, 1, 1, 0],
 [0, 0, 0, 1]]

-- object literal
{ name: "Tim", age: 30 }

-- integer lookup
matrix[0][2]

-- string lookup
person["name"]


-- dynamic array and object lookup
matrix[row, column]
person[key]

-- list expressions
var list = [1, 2, 3, 4, 5]
map x in list if x % 2 {
  x * x
} --> (1 9 25)

-- A generator list that counts from 1 to n
var count = {n|
  {i|
    if i < n { i + 1 }
  }
}

-- Use the custom list in a list expression
map x in count(9) if x % 2 { x * 2 } --> [2, 6, 10, 14, 18]

-- if..elif..else expression
if a < 4 {
  "small"
} elif a > 10 {
  "large"
} else {
  "medium"
}

-- while loop
var i = 0
while i < 10 {
  print(i)
  i = i + 1
}

-- each loop expression
for x in list if x % 2 {
  print(x * x)
}

-- map expression with block
map x in list if x % 2 {
  print(x * x)
}

-- Lambda expressions
{x| x * x}
{a, b| a + b}
{| "Hello"}

-- Bits of the coffeescript example ported
var number = 42
var opposite = true

if opposite { number = -42 }

var square = {x| x * x}

var math = {
  root: {x| Math.sqrt(x)},
  square: square,
  cube: {x| x * square(x)}
}

-- Early function return
var fib = {i|
  if i <= 2 {
    return 1
  }
  -- This fib doesn't like 42
  if i == 42 {
    abort "I don't like 42!"
  }
  fib(i - 2) + fib(i - 1)
}